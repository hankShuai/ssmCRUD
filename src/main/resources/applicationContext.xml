<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.demo.crud">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref ="sqlSessionFactory"/>
        <constructor-arg name="executorType"  value="BATCH"/>
    </bean>

<!--    spring 配置文件,配置和业务逻辑相关 数据源，事务控制-->
    <context:property-placeholder location="classpath:/jdbc.properties"/>
    <bean  id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${jdbc.user}"/>
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

<!--    配置和mybatis的整合-->
    <bean  id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!--        指定mybatis全局配置位置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource"/>
<!--        指定mybatis mapper文件的位置-->
        <property name="mapperLocations"  value="classpath:mapper/*.xml"/>
    </bean>

<!--    配置扫描器,把mybatis接口的实现加入到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<!--        扫描所有dao接口实现-->
        <property name="basePackage" value="com.demo.crud"/>
    </bean>

<!--    事务控制===============================================================-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
<!--        控制数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>
<!--开启基于xml配置的事务-->
    <aop:config>
        <aop:pointcut id="txPomnit" expression="execution(* com.demo.crud.service..*(..))"/>
<!--        配置事务增强-->
        <aop:advisor advice-ref="txAdv" pointcut-ref="txPomnit"/>


    </aop:config>
<!--    配置事务增强，事务如何切入-->
    <tx:advice id="txAdv">
        <tx:attributes>
<!--            所有方法都是事务方法-->
            <tx:method name="*"/>
<!--            以get开头的所有方法-->
            <tx:method name="get" read-only="true"/>
        </tx:attributes>
    </tx:advice>


</beans>